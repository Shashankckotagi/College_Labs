#include <iostream>
#include <ctime> // Include time.h for measuring execution time
using namespace std;

void merge(int arr[], int left, int mid, int right) {
    int n1 = mid - left + 1;
    int n2 = right - mid;
    int L[n1], R[n2];
    for (int i = 0; i < n1; i++) {
        L[i] = arr[left + i];
    }
    for (int j = 0; j < n2; j++) {
        R[j] = arr[mid + 1 + j];
    }
    int i = 0, j = 0, k = left;
    while (i < n1 && j < n2) {
        if (L[i] < R[j]) {
            arr[k++] = L[i++];
        } else {
            arr[k++] = R[j++];
        }
    }
    while (i < n1) {
        arr[k++] = L[i++];
    }
    while (j < n2) {
        arr[k++] = R[j++];
    }
}

void mergesort(int arr[], int left, int right) {
    if (left < right) {
        int mid = left + (right - left) / 2;
        mergesort(arr, left, mid);
        mergesort(arr, mid + 1, right);
        merge(arr, left, mid, right);
    }
}

int main() {
    int arr[5] = {23, 52, 2, 12, 65};

    // Start measuring time
    clock_t start_time = clock();

    mergesort(arr, 0, 4);

    // End measuring time
    clock_t end_time = clock();

    // Calculate and print the elapsed time
    double time_taken = double(end_time - start_time) / CLOCKS_PER_SEC;
    
    cout << "Sorted array: ";
    for (int i = 0; i < 5; i++) {
        cout << arr[i] << " ";
    }
    
    cout << "\nTime taken by merge sort: " << fixed << time_taken << " seconds" << endl;

    return 0;
}

